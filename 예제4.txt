// ConsoleApplication2.cpp: 콘솔 응용 프로그램의 진입점을 정의합니다.
//
#include "stdafx.h"
#include<glut.h>
#include<stdlib.h>
#include<time.h>
static int delay = 1;
void init();
void display();
void draw(GLfloat[], GLfloat[], GLfloat[],int);
//void timer(int);	
int main(int argc, char *argv[])
{
	glutInit(&argc, (char**)argv); // 초기화
	glutInitWindowSize(500, 500); // 윈도우크기초기화(도화지크기)(실행하면 나오는 화면)
	glutCreateWindow("Prog03 : Bouncing Pixel"); // 윈도우생성 
	glutDisplayFunc(display);  // os가 언제 화면을 보여줄지(parameter를 그릴것)
	//glutTimerFunc(delay, timer, 0);

	init(); // openGL 초기화
	glutMainLoop(); // event queue에 어떤 event가 들어있는지 검사하는 loop시작
	return 0;
}

void init() { // openGL 초기화
	glClearColor(1.0, 1.0, 1.0, 1.0); // (r g b a(투명도)(1이 불투명)순서)(1이 최대값 가장 강한 색)
	//glColor3f(1.0, 0.0, 0.0); // 붓의 색 선택(1 0 0 --> 빨간색)
	gluOrtho2D(0.0, 50.0, 0.0, 50.0); // 좌표계 크기 설정 (left,right,bottom,top)
	//화면에보이는 좌표 범위 

}

void display() {
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1, 0, 0);
	glBegin(GL_TRIANGLES);
	GLfloat a[2] = { 0,0 }, b[2] = { 25,50 }, c[2] = { 50,0 };
	//glVertex2f(x1, y1);
	draw(a, b, c, 0);

	glEnd();
	glFlush();
}
void draw(GLfloat a[], GLfloat b[], GLfloat c[], int count) {
	GLfloat d[2] = {(a[0]+b[0])/2.0,(a[1]+b[1])/2.0 }, e[2] = { (a[0] + c[0]) / 2.0,(a[1] + c[1]) / 2.0 }, f[2] = { (c[0] + b[0]) / 2.0,(c[1] + b[1]) / 2.0 };
	count++;
	if (count == 6) {
		glVertex2fv(a);
		glVertex2fv(b);
		glVertex2fv(c);
		return;
	}
	draw(a, d, e, count);
	draw(e, f, c, count);
	draw(d, b, f, count);
	
}



// ConsoleApplication4.cpp: 콘솔 응용 프로그램의 진입점을 정의합니다.
//

#include "stdafx.h"
#include<glut.h>
void init();
void display();
void draw(GLfloat *, GLfloat *,GLfloat *,int);
int main(int argc, char *argv[])
{
	glutInit(&argc, (char**)argv);
	glutInitWindowSize(500, 500);
	glutCreateWindow("Prog01 : first ");
	glutDisplayFunc(display);

	init();
	glutMainLoop();           // run main loop of GLUT
	return 0;
}

void init() {
	glClearColor(1.0, 1.0, 1.0, 1.0); // background color(r,g,b,alpha)
	glColor3f(1.0, 0.0, 0.0);         // pen color
	gluOrtho2D(0.0, 50.0, 0.0, 50.0); // 2d coordinates(left,right,bottom,top)
}

void display() {
	glClear(GL_COLOR_BUFFER_BIT);      // clear background
	GLfloat a[2] = { 0,0 }, b[2] = { 25,50 }, c[2] = { 50,0 };
	draw(a, b, c,0);
}

void draw(GLfloat *a,GLfloat *b,GLfloat *c,int count) {
	if (count == 6)
		return;
	count++;
	glBegin(GL_TRIANGLES);
	GLfloat d[2] = { (a[0] + b[0]) / 2.0, (a[1] + b[1]) / 2.0 }, e[2] = { (a[0] + c[0]) / 2.0,(a[1] + c[1]) / 2.0 }, f[2] = { (b[0] + c[0]) / 2.0,(b[1] + c[1]) / 2.0 };
	draw(a, d, e, count);
	draw(d, b, f, count);
	draw(e, f, c, count);
	glVertex2fv(a);
	glVertex2fv(b);
	glVertex2fv(c);
	glEnd();
	glFlush();
}

